/**
 * BankcardTransactionResponse.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard;

public class BankcardTransactionResponse  extends com.ipcommerce.schemas.CWS.v2_0.Transactions.Response  implements java.io.Serializable {
    /* <summary>
     *             Specifies the authorization amount of the transaction.
     * This is the actual amount authorized and used when settling a subsequent
     * authorization completion instead of the request amount. Expected.
     *             </summary> */
    private java.math.BigDecimal amount;

    /* <summary>
     *             Type of card used in the transaction. Optional for Credit
     * transactions. Optional.
     *             </summary> */
    private com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.TypeCardType cardType;

    /* <summary>
     *             Fee amount charged for the transaction. Optional.
     *             </summary> */
    private java.math.BigDecimal feeAmount;

    /* <summary>
     *             A value returned when a transaction is approved. This
     * value should be printed on the receipt, and also recorded for every
     * offline transaction, such as a voice authorization. Expected.
     *             </summary> */
    private java.lang.String approvalCode;

    /* <summary>
     *             Collection of AVS response data. Optional.
     *             </summary> */
    private com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.AVSResult AVSResult;

    /* <summary>
     *             Batch Identifier. Optional.
     *             </summary> */
    private java.lang.String batchId;

    /* <summary>
     *             Response code returned by the card issuer indicating the
     * result of Card Verification (CVV2/CVC2/CID). Optional.
     *             </summary> */
    private com.ipcommerce.schemas.CWS.v2_0.Transactions.CVResult CVResult;

    /* <summary>
     *             Code returned by the card association that indicates the
     * type of card used by the customer. Optional.
     *             </summary> */
    private java.lang.String cardLevel;

    /* <summary>
     *             Downgrade reason. Optional.
     *             </summary> */
    private java.lang.String downgradeCode;

    /* <summary>
     *             Masked PAN for storage. Optional.
     *             </summary> */
    private java.lang.String maskedPAN;

    /* <summary>
     *             Token specified by a tokenization (offsite payment account
     * data storage) Service Provider, used to retrieve securely stored payment
     * account data. Conditional, required if any one of the following must
     * be provided: CardDataToken, SecureCardData, or tender-specific payment
     * account data.
     *             </summary> */
    private java.lang.String paymentAccountDataToken;

    /* <summary>
     *             Retrieval reference number generated by the processor
     * used for settlement and reversals. If present in the response, this
     * same data element and value must be provided during settlement of
     * any subsequent authorization linked to this transaction. Optional
     *             </summary> */
    private java.lang.String retrievalReferenceNumber;

    /* <summary>
     *             Specifies whether resubmission is supported for PIN Debit
     * transactions. Optional.
     *             </summary> */
    private com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.Resubmit resubmit;

    /* <summary>
     *             Settlement date. Optional.
     *             </summary> */
    private java.util.Calendar settlementDate;

    /* <summary>
     *             The account balance after the transaction. Optional.
     *             </summary> */
    private java.math.BigDecimal finalBalance;

    /* <summary>
     *             The order id generated by CWS. This value is often used
     * by Service Providers for transaction correlation. Optional.
     *             </summary> */
    private java.lang.String orderId;

    /* <summary>
     *             The approved cash back amount. Optional.
     *             </summary> */
    private java.math.BigDecimal cashBackAmount;

    /* <summary>
     *             Specifies whether or not the card is a prepaid card. The
     * identification of prepaid cards is at the discretion of the payment
     * brand or issuer. Optional.
     *             </summary> */
    private com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.PrepaidCard prepaidCard;

    /* <summary>
     *             The 4-digit expiration date embossed on the front of a
     * card. Expected.
     *             </summary> */
    private java.lang.String expire;

    public BankcardTransactionResponse() {
    }

    public BankcardTransactionResponse(
           com.ipcommerce.schemas.CWS.v2_0.Transactions.Status status,
           java.lang.String statusCode,
           java.lang.String statusMessage,
           java.lang.String transactionId,
           java.lang.String originatorTransactionId,
           java.lang.String serviceTransactionId,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.ServiceTransactionDateTime serviceTransactionDateTime,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.Addendum addendum,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.CaptureState captureState,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.TransactionState transactionState,
           java.lang.Boolean isAcknowledged,
           java.lang.String reference,
           java.math.BigDecimal amount,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.TypeCardType cardType,
           java.math.BigDecimal feeAmount,
           java.lang.String approvalCode,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.AVSResult AVSResult,
           java.lang.String batchId,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.CVResult CVResult,
           java.lang.String cardLevel,
           java.lang.String downgradeCode,
           java.lang.String maskedPAN,
           java.lang.String paymentAccountDataToken,
           java.lang.String retrievalReferenceNumber,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.Resubmit resubmit,
           java.util.Calendar settlementDate,
           java.math.BigDecimal finalBalance,
           java.lang.String orderId,
           java.math.BigDecimal cashBackAmount,
           com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.PrepaidCard prepaidCard,
           java.lang.String expire) {
        super(
            status,
            statusCode,
            statusMessage,
            transactionId,
            originatorTransactionId,
            serviceTransactionId,
            serviceTransactionDateTime,
            addendum,
            captureState,
            transactionState,
            isAcknowledged,
            reference);
        this.amount = amount;
        this.cardType = cardType;
        this.feeAmount = feeAmount;
        this.approvalCode = approvalCode;
        this.AVSResult = AVSResult;
        this.batchId = batchId;
        this.CVResult = CVResult;
        this.cardLevel = cardLevel;
        this.downgradeCode = downgradeCode;
        this.maskedPAN = maskedPAN;
        this.paymentAccountDataToken = paymentAccountDataToken;
        this.retrievalReferenceNumber = retrievalReferenceNumber;
        this.resubmit = resubmit;
        this.settlementDate = settlementDate;
        this.finalBalance = finalBalance;
        this.orderId = orderId;
        this.cashBackAmount = cashBackAmount;
        this.prepaidCard = prepaidCard;
        this.expire = expire;
    }


    /**
     * Gets the amount value for this BankcardTransactionResponse.
     * 
     * @return amount   * <summary>
     *             Specifies the authorization amount of the transaction.
     * This is the actual amount authorized and used when settling a subsequent
     * authorization completion instead of the request amount. Expected.
     *             </summary>
     */
    public java.math.BigDecimal getAmount() {
        return amount;
    }


    /**
     * Sets the amount value for this BankcardTransactionResponse.
     * 
     * @param amount   * <summary>
     *             Specifies the authorization amount of the transaction.
     * This is the actual amount authorized and used when settling a subsequent
     * authorization completion instead of the request amount. Expected.
     *             </summary>
     */
    public void setAmount(java.math.BigDecimal amount) {
        this.amount = amount;
    }


    /**
     * Gets the cardType value for this BankcardTransactionResponse.
     * 
     * @return cardType   * <summary>
     *             Type of card used in the transaction. Optional for Credit
     * transactions. Optional.
     *             </summary>
     */
    public com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.TypeCardType getCardType() {
        return cardType;
    }


    /**
     * Sets the cardType value for this BankcardTransactionResponse.
     * 
     * @param cardType   * <summary>
     *             Type of card used in the transaction. Optional for Credit
     * transactions. Optional.
     *             </summary>
     */
    public void setCardType(com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.TypeCardType cardType) {
        this.cardType = cardType;
    }


    /**
     * Gets the feeAmount value for this BankcardTransactionResponse.
     * 
     * @return feeAmount   * <summary>
     *             Fee amount charged for the transaction. Optional.
     *             </summary>
     */
    public java.math.BigDecimal getFeeAmount() {
        return feeAmount;
    }


    /**
     * Sets the feeAmount value for this BankcardTransactionResponse.
     * 
     * @param feeAmount   * <summary>
     *             Fee amount charged for the transaction. Optional.
     *             </summary>
     */
    public void setFeeAmount(java.math.BigDecimal feeAmount) {
        this.feeAmount = feeAmount;
    }


    /**
     * Gets the approvalCode value for this BankcardTransactionResponse.
     * 
     * @return approvalCode   * <summary>
     *             A value returned when a transaction is approved. This
     * value should be printed on the receipt, and also recorded for every
     * offline transaction, such as a voice authorization. Expected.
     *             </summary>
     */
    public java.lang.String getApprovalCode() {
        return approvalCode;
    }


    /**
     * Sets the approvalCode value for this BankcardTransactionResponse.
     * 
     * @param approvalCode   * <summary>
     *             A value returned when a transaction is approved. This
     * value should be printed on the receipt, and also recorded for every
     * offline transaction, such as a voice authorization. Expected.
     *             </summary>
     */
    public void setApprovalCode(java.lang.String approvalCode) {
        this.approvalCode = approvalCode;
    }


    /**
     * Gets the AVSResult value for this BankcardTransactionResponse.
     * 
     * @return AVSResult   * <summary>
     *             Collection of AVS response data. Optional.
     *             </summary>
     */
    public com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.AVSResult getAVSResult() {
        return AVSResult;
    }


    /**
     * Sets the AVSResult value for this BankcardTransactionResponse.
     * 
     * @param AVSResult   * <summary>
     *             Collection of AVS response data. Optional.
     *             </summary>
     */
    public void setAVSResult(com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.AVSResult AVSResult) {
        this.AVSResult = AVSResult;
    }


    /**
     * Gets the batchId value for this BankcardTransactionResponse.
     * 
     * @return batchId   * <summary>
     *             Batch Identifier. Optional.
     *             </summary>
     */
    public java.lang.String getBatchId() {
        return batchId;
    }


    /**
     * Sets the batchId value for this BankcardTransactionResponse.
     * 
     * @param batchId   * <summary>
     *             Batch Identifier. Optional.
     *             </summary>
     */
    public void setBatchId(java.lang.String batchId) {
        this.batchId = batchId;
    }


    /**
     * Gets the CVResult value for this BankcardTransactionResponse.
     * 
     * @return CVResult   * <summary>
     *             Response code returned by the card issuer indicating the
     * result of Card Verification (CVV2/CVC2/CID). Optional.
     *             </summary>
     */
    public com.ipcommerce.schemas.CWS.v2_0.Transactions.CVResult getCVResult() {
        return CVResult;
    }


    /**
     * Sets the CVResult value for this BankcardTransactionResponse.
     * 
     * @param CVResult   * <summary>
     *             Response code returned by the card issuer indicating the
     * result of Card Verification (CVV2/CVC2/CID). Optional.
     *             </summary>
     */
    public void setCVResult(com.ipcommerce.schemas.CWS.v2_0.Transactions.CVResult CVResult) {
        this.CVResult = CVResult;
    }


    /**
     * Gets the cardLevel value for this BankcardTransactionResponse.
     * 
     * @return cardLevel   * <summary>
     *             Code returned by the card association that indicates the
     * type of card used by the customer. Optional.
     *             </summary>
     */
    public java.lang.String getCardLevel() {
        return cardLevel;
    }


    /**
     * Sets the cardLevel value for this BankcardTransactionResponse.
     * 
     * @param cardLevel   * <summary>
     *             Code returned by the card association that indicates the
     * type of card used by the customer. Optional.
     *             </summary>
     */
    public void setCardLevel(java.lang.String cardLevel) {
        this.cardLevel = cardLevel;
    }


    /**
     * Gets the downgradeCode value for this BankcardTransactionResponse.
     * 
     * @return downgradeCode   * <summary>
     *             Downgrade reason. Optional.
     *             </summary>
     */
    public java.lang.String getDowngradeCode() {
        return downgradeCode;
    }


    /**
     * Sets the downgradeCode value for this BankcardTransactionResponse.
     * 
     * @param downgradeCode   * <summary>
     *             Downgrade reason. Optional.
     *             </summary>
     */
    public void setDowngradeCode(java.lang.String downgradeCode) {
        this.downgradeCode = downgradeCode;
    }


    /**
     * Gets the maskedPAN value for this BankcardTransactionResponse.
     * 
     * @return maskedPAN   * <summary>
     *             Masked PAN for storage. Optional.
     *             </summary>
     */
    public java.lang.String getMaskedPAN() {
        return maskedPAN;
    }


    /**
     * Sets the maskedPAN value for this BankcardTransactionResponse.
     * 
     * @param maskedPAN   * <summary>
     *             Masked PAN for storage. Optional.
     *             </summary>
     */
    public void setMaskedPAN(java.lang.String maskedPAN) {
        this.maskedPAN = maskedPAN;
    }


    /**
     * Gets the paymentAccountDataToken value for this BankcardTransactionResponse.
     * 
     * @return paymentAccountDataToken   * <summary>
     *             Token specified by a tokenization (offsite payment account
     * data storage) Service Provider, used to retrieve securely stored payment
     * account data. Conditional, required if any one of the following must
     * be provided: CardDataToken, SecureCardData, or tender-specific payment
     * account data.
     *             </summary>
     */
    public java.lang.String getPaymentAccountDataToken() {
        return paymentAccountDataToken;
    }


    /**
     * Sets the paymentAccountDataToken value for this BankcardTransactionResponse.
     * 
     * @param paymentAccountDataToken   * <summary>
     *             Token specified by a tokenization (offsite payment account
     * data storage) Service Provider, used to retrieve securely stored payment
     * account data. Conditional, required if any one of the following must
     * be provided: CardDataToken, SecureCardData, or tender-specific payment
     * account data.
     *             </summary>
     */
    public void setPaymentAccountDataToken(java.lang.String paymentAccountDataToken) {
        this.paymentAccountDataToken = paymentAccountDataToken;
    }


    /**
     * Gets the retrievalReferenceNumber value for this BankcardTransactionResponse.
     * 
     * @return retrievalReferenceNumber   * <summary>
     *             Retrieval reference number generated by the processor
     * used for settlement and reversals. If present in the response, this
     * same data element and value must be provided during settlement of
     * any subsequent authorization linked to this transaction. Optional
     *             </summary>
     */
    public java.lang.String getRetrievalReferenceNumber() {
        return retrievalReferenceNumber;
    }


    /**
     * Sets the retrievalReferenceNumber value for this BankcardTransactionResponse.
     * 
     * @param retrievalReferenceNumber   * <summary>
     *             Retrieval reference number generated by the processor
     * used for settlement and reversals. If present in the response, this
     * same data element and value must be provided during settlement of
     * any subsequent authorization linked to this transaction. Optional
     *             </summary>
     */
    public void setRetrievalReferenceNumber(java.lang.String retrievalReferenceNumber) {
        this.retrievalReferenceNumber = retrievalReferenceNumber;
    }


    /**
     * Gets the resubmit value for this BankcardTransactionResponse.
     * 
     * @return resubmit   * <summary>
     *             Specifies whether resubmission is supported for PIN Debit
     * transactions. Optional.
     *             </summary>
     */
    public com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.Resubmit getResubmit() {
        return resubmit;
    }


    /**
     * Sets the resubmit value for this BankcardTransactionResponse.
     * 
     * @param resubmit   * <summary>
     *             Specifies whether resubmission is supported for PIN Debit
     * transactions. Optional.
     *             </summary>
     */
    public void setResubmit(com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.Resubmit resubmit) {
        this.resubmit = resubmit;
    }


    /**
     * Gets the settlementDate value for this BankcardTransactionResponse.
     * 
     * @return settlementDate   * <summary>
     *             Settlement date. Optional.
     *             </summary>
     */
    public java.util.Calendar getSettlementDate() {
        return settlementDate;
    }


    /**
     * Sets the settlementDate value for this BankcardTransactionResponse.
     * 
     * @param settlementDate   * <summary>
     *             Settlement date. Optional.
     *             </summary>
     */
    public void setSettlementDate(java.util.Calendar settlementDate) {
        this.settlementDate = settlementDate;
    }


    /**
     * Gets the finalBalance value for this BankcardTransactionResponse.
     * 
     * @return finalBalance   * <summary>
     *             The account balance after the transaction. Optional.
     *             </summary>
     */
    public java.math.BigDecimal getFinalBalance() {
        return finalBalance;
    }


    /**
     * Sets the finalBalance value for this BankcardTransactionResponse.
     * 
     * @param finalBalance   * <summary>
     *             The account balance after the transaction. Optional.
     *             </summary>
     */
    public void setFinalBalance(java.math.BigDecimal finalBalance) {
        this.finalBalance = finalBalance;
    }


    /**
     * Gets the orderId value for this BankcardTransactionResponse.
     * 
     * @return orderId   * <summary>
     *             The order id generated by CWS. This value is often used
     * by Service Providers for transaction correlation. Optional.
     *             </summary>
     */
    public java.lang.String getOrderId() {
        return orderId;
    }


    /**
     * Sets the orderId value for this BankcardTransactionResponse.
     * 
     * @param orderId   * <summary>
     *             The order id generated by CWS. This value is often used
     * by Service Providers for transaction correlation. Optional.
     *             </summary>
     */
    public void setOrderId(java.lang.String orderId) {
        this.orderId = orderId;
    }


    /**
     * Gets the cashBackAmount value for this BankcardTransactionResponse.
     * 
     * @return cashBackAmount   * <summary>
     *             The approved cash back amount. Optional.
     *             </summary>
     */
    public java.math.BigDecimal getCashBackAmount() {
        return cashBackAmount;
    }


    /**
     * Sets the cashBackAmount value for this BankcardTransactionResponse.
     * 
     * @param cashBackAmount   * <summary>
     *             The approved cash back amount. Optional.
     *             </summary>
     */
    public void setCashBackAmount(java.math.BigDecimal cashBackAmount) {
        this.cashBackAmount = cashBackAmount;
    }


    /**
     * Gets the prepaidCard value for this BankcardTransactionResponse.
     * 
     * @return prepaidCard   * <summary>
     *             Specifies whether or not the card is a prepaid card. The
     * identification of prepaid cards is at the discretion of the payment
     * brand or issuer. Optional.
     *             </summary>
     */
    public com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.PrepaidCard getPrepaidCard() {
        return prepaidCard;
    }


    /**
     * Sets the prepaidCard value for this BankcardTransactionResponse.
     * 
     * @param prepaidCard   * <summary>
     *             Specifies whether or not the card is a prepaid card. The
     * identification of prepaid cards is at the discretion of the payment
     * brand or issuer. Optional.
     *             </summary>
     */
    public void setPrepaidCard(com.ipcommerce.schemas.CWS.v2_0.Transactions.Bankcard.PrepaidCard prepaidCard) {
        this.prepaidCard = prepaidCard;
    }


    /**
     * Gets the expire value for this BankcardTransactionResponse.
     * 
     * @return expire   * <summary>
     *             The 4-digit expiration date embossed on the front of a
     * card. Expected.
     *             </summary>
     */
    public java.lang.String getExpire() {
        return expire;
    }


    /**
     * Sets the expire value for this BankcardTransactionResponse.
     * 
     * @param expire   * <summary>
     *             The 4-digit expiration date embossed on the front of a
     * card. Expected.
     *             </summary>
     */
    public void setExpire(java.lang.String expire) {
        this.expire = expire;
    }

    private java.lang.Object __equalsCalc = null;
    public synchronized boolean equals(java.lang.Object obj) {
        if (!(obj instanceof BankcardTransactionResponse)) return false;
        BankcardTransactionResponse other = (BankcardTransactionResponse) obj;
        if (obj == null) return false;
        if (this == obj) return true;
        if (__equalsCalc != null) {
            return (__equalsCalc == obj);
        }
        __equalsCalc = obj;
        boolean _equals;
        _equals = super.equals(obj) && 
            ((this.amount==null && other.getAmount()==null) || 
             (this.amount!=null &&
              this.amount.equals(other.getAmount()))) &&
            ((this.cardType==null && other.getCardType()==null) || 
             (this.cardType!=null &&
              this.cardType.equals(other.getCardType()))) &&
            ((this.feeAmount==null && other.getFeeAmount()==null) || 
             (this.feeAmount!=null &&
              this.feeAmount.equals(other.getFeeAmount()))) &&
            ((this.approvalCode==null && other.getApprovalCode()==null) || 
             (this.approvalCode!=null &&
              this.approvalCode.equals(other.getApprovalCode()))) &&
            ((this.AVSResult==null && other.getAVSResult()==null) || 
             (this.AVSResult!=null &&
              this.AVSResult.equals(other.getAVSResult()))) &&
            ((this.batchId==null && other.getBatchId()==null) || 
             (this.batchId!=null &&
              this.batchId.equals(other.getBatchId()))) &&
            ((this.CVResult==null && other.getCVResult()==null) || 
             (this.CVResult!=null &&
              this.CVResult.equals(other.getCVResult()))) &&
            ((this.cardLevel==null && other.getCardLevel()==null) || 
             (this.cardLevel!=null &&
              this.cardLevel.equals(other.getCardLevel()))) &&
            ((this.downgradeCode==null && other.getDowngradeCode()==null) || 
             (this.downgradeCode!=null &&
              this.downgradeCode.equals(other.getDowngradeCode()))) &&
            ((this.maskedPAN==null && other.getMaskedPAN()==null) || 
             (this.maskedPAN!=null &&
              this.maskedPAN.equals(other.getMaskedPAN()))) &&
            ((this.paymentAccountDataToken==null && other.getPaymentAccountDataToken()==null) || 
             (this.paymentAccountDataToken!=null &&
              this.paymentAccountDataToken.equals(other.getPaymentAccountDataToken()))) &&
            ((this.retrievalReferenceNumber==null && other.getRetrievalReferenceNumber()==null) || 
             (this.retrievalReferenceNumber!=null &&
              this.retrievalReferenceNumber.equals(other.getRetrievalReferenceNumber()))) &&
            ((this.resubmit==null && other.getResubmit()==null) || 
             (this.resubmit!=null &&
              this.resubmit.equals(other.getResubmit()))) &&
            ((this.settlementDate==null && other.getSettlementDate()==null) || 
             (this.settlementDate!=null &&
              this.settlementDate.equals(other.getSettlementDate()))) &&
            ((this.finalBalance==null && other.getFinalBalance()==null) || 
             (this.finalBalance!=null &&
              this.finalBalance.equals(other.getFinalBalance()))) &&
            ((this.orderId==null && other.getOrderId()==null) || 
             (this.orderId!=null &&
              this.orderId.equals(other.getOrderId()))) &&
            ((this.cashBackAmount==null && other.getCashBackAmount()==null) || 
             (this.cashBackAmount!=null &&
              this.cashBackAmount.equals(other.getCashBackAmount()))) &&
            ((this.prepaidCard==null && other.getPrepaidCard()==null) || 
             (this.prepaidCard!=null &&
              this.prepaidCard.equals(other.getPrepaidCard()))) &&
            ((this.expire==null && other.getExpire()==null) || 
             (this.expire!=null &&
              this.expire.equals(other.getExpire())));
        __equalsCalc = null;
        return _equals;
    }

    private boolean __hashCodeCalc = false;
    public synchronized int hashCode() {
        if (__hashCodeCalc) {
            return 0;
        }
        __hashCodeCalc = true;
        int _hashCode = super.hashCode();
        if (getAmount() != null) {
            _hashCode += getAmount().hashCode();
        }
        if (getCardType() != null) {
            _hashCode += getCardType().hashCode();
        }
        if (getFeeAmount() != null) {
            _hashCode += getFeeAmount().hashCode();
        }
        if (getApprovalCode() != null) {
            _hashCode += getApprovalCode().hashCode();
        }
        if (getAVSResult() != null) {
            _hashCode += getAVSResult().hashCode();
        }
        if (getBatchId() != null) {
            _hashCode += getBatchId().hashCode();
        }
        if (getCVResult() != null) {
            _hashCode += getCVResult().hashCode();
        }
        if (getCardLevel() != null) {
            _hashCode += getCardLevel().hashCode();
        }
        if (getDowngradeCode() != null) {
            _hashCode += getDowngradeCode().hashCode();
        }
        if (getMaskedPAN() != null) {
            _hashCode += getMaskedPAN().hashCode();
        }
        if (getPaymentAccountDataToken() != null) {
            _hashCode += getPaymentAccountDataToken().hashCode();
        }
        if (getRetrievalReferenceNumber() != null) {
            _hashCode += getRetrievalReferenceNumber().hashCode();
        }
        if (getResubmit() != null) {
            _hashCode += getResubmit().hashCode();
        }
        if (getSettlementDate() != null) {
            _hashCode += getSettlementDate().hashCode();
        }
        if (getFinalBalance() != null) {
            _hashCode += getFinalBalance().hashCode();
        }
        if (getOrderId() != null) {
            _hashCode += getOrderId().hashCode();
        }
        if (getCashBackAmount() != null) {
            _hashCode += getCashBackAmount().hashCode();
        }
        if (getPrepaidCard() != null) {
            _hashCode += getPrepaidCard().hashCode();
        }
        if (getExpire() != null) {
            _hashCode += getExpire().hashCode();
        }
        __hashCodeCalc = false;
        return _hashCode;
    }

    // Type metadata
    private static org.apache.axis.description.TypeDesc typeDesc =
        new org.apache.axis.description.TypeDesc(BankcardTransactionResponse.class, true);

    static {
        typeDesc.setXmlType(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "BankcardTransactionResponse"));
        org.apache.axis.description.ElementDesc elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("amount");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "Amount"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "decimal"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cardType");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "CardType"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "TypeCardType"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("feeAmount");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "FeeAmount"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "decimal"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("approvalCode");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "ApprovalCode"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("AVSResult");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "AVSResult"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "AVSResult"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("batchId");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "BatchId"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("CVResult");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "CVResult"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions", "CVResult"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cardLevel");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "CardLevel"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("downgradeCode");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "DowngradeCode"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("maskedPAN");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "MaskedPAN"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("paymentAccountDataToken");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "PaymentAccountDataToken"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("retrievalReferenceNumber");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "RetrievalReferenceNumber"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("resubmit");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "Resubmit"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "Resubmit"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("settlementDate");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "SettlementDate"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "dateTime"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("finalBalance");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "FinalBalance"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "decimal"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("orderId");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "OrderId"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("cashBackAmount");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "CashBackAmount"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "decimal"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("prepaidCard");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "PrepaidCard"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "PrepaidCard"));
        elemField.setMinOccurs(0);
        elemField.setNillable(false);
        typeDesc.addFieldDesc(elemField);
        elemField = new org.apache.axis.description.ElementDesc();
        elemField.setFieldName("expire");
        elemField.setXmlName(new javax.xml.namespace.QName("http://schemas.ipcommerce.com/CWS/v2.0/Transactions/Bankcard", "Expire"));
        elemField.setXmlType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        elemField.setMinOccurs(0);
        elemField.setNillable(true);
        typeDesc.addFieldDesc(elemField);
    }

    /**
     * Return type metadata object
     */
    public static org.apache.axis.description.TypeDesc getTypeDesc() {
        return typeDesc;
    }

    /**
     * Get Custom Serializer
     */
    public static org.apache.axis.encoding.Serializer getSerializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanSerializer(
            _javaType, _xmlType, typeDesc);
    }

    /**
     * Get Custom Deserializer
     */
    public static org.apache.axis.encoding.Deserializer getDeserializer(
           java.lang.String mechType, 
           java.lang.Class _javaType,  
           javax.xml.namespace.QName _xmlType) {
        return 
          new  org.apache.axis.encoding.ser.BeanDeserializer(
            _javaType, _xmlType, typeDesc);
    }

}
